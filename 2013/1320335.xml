<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Collaborative Proposal: Efficient Computer Algebra Techniques for Scalable Verification of Galois Field Arithmetic Circuits</AwardTitle>
    <AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2016</AwardExpirationDate>
    <AwardAmount>205071</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sankar Basu</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>With the spread of Internet and mobile devices, transferring information safely and securely has become more important than ever. The hardware and software systems utilized in such applications, e.g. cryptography, perform arithmetic computations over Galois fields. The specialized nature and the high complexity of the hardware architectures require manual, custom design, which raises the potential for errors/bugs in the design implementation. Hardware bugs in arithmetic circuits not only cause unintended operation, but they also make cryptosystems vulnerable to security attacks. Validating the correctness of, and bug-catching in, arithmetic hardware is imperative. This project investigates the use of modern Symbolic Computer Algebra techniques for formal verification of Galois field arithmetic circuits. &lt;br/&gt;&lt;br/&gt;Verification of cyber-security is a problem of great importance, and it is attracting a lot of research at the software-level. However, hardware verification of primitive Galois field computations in crypto-systems has not seen much breakthrough. The main reason for this is that the arithmetic circuit architectures employed in cryptography are very complex and their size is extremely large. Conventional verification techniques are unable to scale with respect to the large size. To address these problems, the project aims to integrate computer algebra with circuit analysis techniques for verification. By exploiting the circuit design information, the project will attempt to overcome the complexity of symbolic computation. This research enables design of domain-specific computer-aided verification tools for efficient, scalable verification of Galois field circuits. The project impacts computer-aided verification technology, secure system-design and validation, and it advances fundamental knowledge in both computer algebra and design verification of arithmetic circuits. Enabling the validation of security and privacy of data also, in general, impacts the society.</AbstractNarration>
    <MinAmdLetterDate>06/24/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>06/24/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1320335</AwardID>
    <Investigator>
      <FirstName>Priyank</FirstName>
      <LastName>Kalla</LastName>
      <EmailAddress>kalla@ece.utah.edu</EmailAddress>
      <StartDate>06/24/2013</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Utah</Name>
      <CityName>SALT LAKE CITY</CityName>
      <ZipCode>841128930</ZipCode>
      <PhoneNumber>8015816903</PhoneNumber>
      <StreetAddress>75 S 2000 E</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Utah</StateName>
      <StateCode>UT</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7945</Code>
      <Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7945</Code>
      <Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
  </Award>
</rootTag>
