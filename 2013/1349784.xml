<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>EAGER: Data Debugging</AwardTitle>
    <AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>02/29/2016</AwardExpirationDate>
    <AwardAmount>150000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Today, systems rely as heavily on data as on the software that manipulates that data. Unlike software, data cannot be easily tested or analyzed for correctness. Part of the problem is that it is difficult to decide whether data is wrong. Typographical errors can change data items by orders of magnitude. For example, the number 1234 might be entered when the correct value is 12.34. Unfortunately, finding this kind of mistake via manual data auditing is onerous, unscalable, and error-prone. Data errors can be costly: Errors in spreadsheet data have led to million dollar losses, and poor data quality has been estimated to cost the US economy more than $600 billion per year. &lt;br/&gt;&lt;br/&gt;Data debugging is a new approach for locating likely data errors by leveraging the interaction between data and the programs that operate on it. Since it is impossible to know a priori whether data is incorrect, data debugging aims to do the next best thing: identifying data that has an unusual impact on the computation. Intuitively, data with an inordinate impact on the result of a computation is either very important, or it is wrong. By contrast, wrong data whose presence has no particularly unusual effect on the final result does not matter. By calling attention to data with inordinately high impact, data debugging can provide insights into both the data and the computation and reveal errors. Data debugging is especially well-suited for data-intensive programming environments like databases and spreadsheets that intertwine data and programs. Data debugging can dramatically reduce the risks of human data entry errors or data corruption, increase the reliability of computations over data, and potentially save the US economy millions of dollars.</AbstractNarration>
    <MinAmdLetterDate>08/19/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>08/19/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1349784</AwardID>
    <Investigator>
      <FirstName>Emery</FirstName>
      <LastName>Berger</LastName>
      <EmailAddress>emery@cs.umass.edu</EmailAddress>
      <StartDate>08/19/2013</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Alexandra</FirstName>
      <LastName>Meliou</LastName>
      <EmailAddress>ameli@cs.umass.edu</EmailAddress>
      <StartDate>08/19/2013</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Massachusetts Amherst</Name>
      <CityName>Hadley</CityName>
      <ZipCode>010359450</ZipCode>
      <PhoneNumber>4135450698</PhoneNumber>
      <StreetAddress>Research Administration Building</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7916</Code>
      <Text>EAGER</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
