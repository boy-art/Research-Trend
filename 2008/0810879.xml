<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CPA-SEL: Automated Quality Prediction: Exploiting Knowledge of the Business Case</AwardTitle>
    <AwardEffectiveDate>06/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>05/31/2012</AwardExpirationDate>
    <AwardAmount>350000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Proposal Number: NSF Proposal 0810879&lt;br/&gt;&lt;br/&gt;Title: Automatic Quality Assessment: Exploiting Knowledge of the Business Case&lt;br/&gt;&lt;br/&gt;PIs: Tim Menzies, Bojan Cukic&lt;br/&gt;&lt;br/&gt;Fault prediction models are very useful, as they allow software project managers to guide the allocation of quality assurance resources to artifacts which need them the most. Recent results now indicate that this research area has reached its limits. All data miners hit a performance ceiling effect when they cannot &amp;#64257;nd additional information that better relates software quality measures with fault occurrence. To build better quality predictors that break through ceiling effects, more topology must be introduced into the search space. Standard machine learning algorithms lack the business knowledge which characterizes software projects. To add that business knowledge, it is proposed to investigate which business level project concerns will be the most promising so they can provide guidance for automated fault prediction models. Human-in-the-loop rule elicitation and maintenance environments will be combined with automated rule inference.&lt;br/&gt;&lt;br/&gt;It is expected that this approach will allow software managers to safely focus on the application of quality assurance techniques of choice, confident that automated quality predictors will raise alerts about the artifacts in which quality issues actually exist.</AbstractNarration>
    <MinAmdLetterDate>06/16/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>06/16/2008</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0810879</AwardID>
    <Investigator>
      <FirstName>Bojan</FirstName>
      <LastName>Cukic</LastName>
      <EmailAddress>bcukic@uncc.edu</EmailAddress>
      <StartDate>06/16/2008</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Timothy</FirstName>
      <LastName>Menzies</LastName>
      <EmailAddress>tim.menzies@gmail.com</EmailAddress>
      <StartDate>06/16/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>West Virginia University Research Corporation</Name>
      <CityName>Morgantown</CityName>
      <ZipCode>265066845</ZipCode>
      <PhoneNumber>3042933998</PhoneNumber>
      <StreetAddress>P.O. Box 6845</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>West Virginia</StateName>
      <StateCode>WV</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>2880</Code>
      <Text>SOFTWARE ENGINEERING AND LANGU</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
