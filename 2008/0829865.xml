<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Code Representation and Performance of Graph-Based Decoding</AwardTitle>
    <AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2011</AwardExpirationDate>
    <AwardAmount>300000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>phillip regalia</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>CCF-0829865&lt;br/&gt;Code Representation and Performance of Graph-Based Decoding&lt;br/&gt;PI: Paul H. Siegel, UC San Diego&lt;br/&gt;&lt;br/&gt;Abstract: The discovery of channel codes that approach information-theoretic performance limits when paired with iterative graph-based decoding algorithms represents a major advance in coding theory and practice. Prime examples include turbo codes, low-density parity-check (LDPC) codes, and repeat-accumulate (RA) codes. These coding techniques and their variants have had a profound impact on data transmission applications, including deep space communications, digital video broadcasting, and mobile wireless telephony. They are also poised for use in other settings, such as high density digital data storage. What is common to these coding and decoding schemes is that their performance and implementation complexity depend not only on the code itself, but also on the choice of graphical representation of the code. This research studies the characteristics of code representations that influence the performance of iterative decoding algorithms, as well as methods for constructing the best representations. &lt;br/&gt;&lt;br/&gt;The research has two major thrusts. The first is the examination of combinatorial and graphical properties of linear code representations that serve as figures of merit for iterative decoder performance on several types of channels having theoretical and practical significance. The understanding of these properties guides improved code design as well as the development of new graph-based decoding strategies. The second thrust is the analysis and enhancement of decoders based upon linear programming. The research studies the adaptive introduction of constraints to reduce decoder complexity and to improve performance. It also considers new linear programming algorithms that exploit sparse code representations. A dynamic interplay between these two research thrusts is achieved by studying the relationship between iterative and linear programming decoders, as well as their application to equalization and detection for channels with memory.</AbstractNarration>
    <MinAmdLetterDate>08/30/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>08/30/2008</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0829865</AwardID>
    <Investigator>
      <FirstName>Paul</FirstName>
      <LastName>Siegel</LastName>
      <EmailAddress>psiegel@ucsd.edu</EmailAddress>
      <StartDate>08/30/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-San Diego</Name>
      <CityName>La Jolla</CityName>
      <ZipCode>920930621</ZipCode>
      <PhoneNumber>8585344896</PhoneNumber>
      <StreetAddress>Office of Contract &amp; Grant Admin</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>4096</Code>
      <Text>COMMUNICATIONS RESEARCH</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
