<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SI2-SSE: Supporting Generic Programming in C++ for Modular and Reliable Large-Scale Software</AwardTitle>
    <AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2017</AwardExpirationDate>
    <AwardAmount>499999</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05090000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Div Of Advanced Cyberinfrastructure</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Rajiv Ramnath</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Generic programming has the potential of an effective methodology for building large-scale, reliable, maintainable, and efficient software artifacts. It is supported by the C++ programming language through the "template" mechanism. In the hands of experts, C++ templates are formidable abstraction tools, key to the success of libraries such as the Standard Template Library, and many freely available and commercial software libraries and products. Unfortunately, the practice of template-based structured generic programming remains restricted to relatively few highly trained individuals. &lt;br/&gt;&lt;br/&gt;A primary objective of this project is to investigate and develop software tools and programming models that support scalable and modular generic libraries. Bringing structured generic programming methodology to mainstream at the scale done for object-oriented programming entails the invention of new programming language constructs and compiler construction techniques that go beyond conventional technologies. In particular, the apparent complexities of templates and arcane technical details must be concealed; code generation has to surpass C++'s current successful applications of templates both in quality and compile time for industrial scale programs. At the core of this project is the investigation of a direct linguistic support for requirements on template arguments ("concepts"), and their implementations in an open source compiler and libraries made freely available to the public, the research and education community.</AbstractNarration>
    <MinAmdLetterDate>05/31/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>10/27/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1148461</AwardID>
    <Investigator>
      <FirstName>Gabriel</FirstName>
      <LastName>Dos Reis</LastName>
      <EmailAddress>gdr@cs.tamu.edu</EmailAddress>
      <StartDate>05/31/2012</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Bjarne</FirstName>
      <LastName>Stroustrup</LastName>
      <EmailAddress>bs@cs.tamu.edu</EmailAddress>
      <StartDate>05/31/2012</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Texas A&amp;M Engineering Experiment Station</Name>
      <CityName>College Station</CityName>
      <ZipCode>778454645</ZipCode>
      <PhoneNumber>9798477635</PhoneNumber>
      <StreetAddress>TEES State Headquarters Bldg.</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Texas</StateName>
      <StateCode>TX</StateCode>
    </Institution>
    <ProgramElement>
      <Code>1640</Code>
      <Text>INFORMATION TECHNOLOGY RESEARC</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>8004</Code>
      <Text>Software Institutes</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7942</Code>
      <Text>HIGH-PERFORMANCE COMPUTING</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8005</Code>
      <Text>Scientific Software Elements</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8004</Code>
      <Text>Software Institutes</Text>
    </ProgramReference>
  </Award>
</rootTag>
