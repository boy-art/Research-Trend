<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CPA-DA: Formal Methods for Multi-core Shared Memory Protocol Design</AwardTitle>
    <AwardEffectiveDate>07/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2013</AwardExpirationDate>
    <AwardAmount>298000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sankar Basu</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Title: Formal Methods for Multi-core Shared Memory Protocol Design&lt;br/&gt;PI: Ganesh Gopalakrishnan&lt;br/&gt;Inst: University of Utah&lt;br/&gt;NSF Proposal Number: 0811429 &lt;br/&gt;&lt;br/&gt;ABSTRACT:&lt;br/&gt;The human society crucially depends on computing devices: from embedded computers in phones to peta-scale computing systems that can perform a million billion multiplications every second, and help simulate everything from car crashes to hurricanes. The performance of a computer must increase each year, without which the information-based human society will cease to advance. Unfortunately, past methods to increase the performance of a computer ? namely increasing the clock frequency and the functional unit complexity -- cease to be effective. These techniques now produce only a miniscule performance increase, while causing huge increases in the energy consumption. Already computing equipments consume more than 5% of the nation's electricity! The only available energy-efficient method of increasing computer performance is through the use of multiple central processing units (CPUs). Unfortunately, such organizations (called "multi-core CPUs") require that the accesses to the central memory be extremely efficient - requiring the use of highly complex protocols - called cache coherence protocols. Unfortunately these protocols must be hand-crafted for high performance, and hence are extremely error-prone. Previous methods to verify cache coherence protocols were already at the limits of the capabilities of verification tools. With the advent of multi-core CPUs, the complexity has become out of reach of all published techniques. The PI and his team are the only academic group to have developed techniques to verify, using mathematically sound computer algorithms, hierarchical multi-core CPU cache coherence protocols. Unfortunately, their methods to date have involved expert humans and often cause considerable tedium. The proposed methods in this proposal are expected to: (1) reduce the burden of verifying cache coherence protocols, and (2) help bridge two central abstraction gaps, thus minimizing the chances of errors in microprocessors: (i) high-level to low-level behavioral modeling gap, and (ii) the low behavioral level to hardware implementation level gap. It will help train valuable manpower - including undergraduates and under-represented groups. It will help sustain the technological momentum of the US, as the availability of sustained high performance computing power is no less important to the nation than its other basic needs such as water, clean air, and energy. The verification tools developed in this project are expected to be technology transferred to the computer industry. Last but not least, the students trained in this project will join the national and international high-technology labor force.</AbstractNarration>
    <MinAmdLetterDate>06/27/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>06/13/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0811429</AwardID>
    <Investigator>
      <FirstName>Ganesh</FirstName>
      <LastName>Gopalakrishnan</LastName>
      <EmailAddress>ganesh@cs.utah.edu</EmailAddress>
      <StartDate>06/27/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Utah</Name>
      <CityName>SALT LAKE CITY</CityName>
      <ZipCode>841128930</ZipCode>
      <PhoneNumber>8015816903</PhoneNumber>
      <StreetAddress>75 S 2000 E</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Utah</StateName>
      <StateCode>UT</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
  </Award>
</rootTag>
