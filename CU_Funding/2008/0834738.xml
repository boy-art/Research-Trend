<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR-PSCE, SM: Recording and Deterministically Replaying Shared-memory Multiprocessor Execution Efficiently</AwardTitle>
    <AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2013</AwardExpirationDate>
    <AwardAmount>420000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>M. Mimi McClure</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Recording and deterministically replaying execution gives system designers the ability to travel backward in time. Time travel in computer systems means the ability to recreate arbitrary past states and events on the computer system. In general, recreating past states and events is achieved by logging key events when the software runs, then restoring to a previous checkpoint and replaying the recorded log to force the software down the same execution path deterministically. This alluring mechanism has enabled a wide range of applications in modern systems including debugging programs, performing post-hoc security analysis, and improving fault tolerance. To maximize effectiveness, replay systems should (i) record at production-run speeds, (ii) keep logging requirements minute, (iii) replay at a speed similar to that of the initial execution. Software-only systems for deterministic replay achieve these goals for uni-processor systems, but suffer from poor performance on multiprocessor systems. Hardware-only systems record and replay efficiently on multiprocessor systems, but current proposals for hardware-only systems are largely impractical since they place too much functionality within the hardware and because they do not mix recording, replaying, and traditional execution on the same system concurrently. This research will focus on the design and implementation of Capo, a hybrid hardware/software replay system that will record and replay execution on multiprocessor systems efficiently. The key contribution of this research will be designing and implementing the first hardware/software interface for combining hardware and software level replay systems. This interface will serve as the foundation for a new generation of replay systems that will achieve both the flexibility of software-level replay systems and the efficiency of hardware-level replay systems.&lt;br/&gt;&lt;br/&gt;If successful, this research will have substantial impact on industry, by enabling the effective use of deterministic replay of parallel codes. The team will release all software artifacts as open source, which will help researchers and educators in many institutions.&lt;br/&gt;&lt;br/&gt;In addition to their research contributions, this team will enhance a series of courses and expand their course offerings in parallel systems - especially at the undergraduate level. The PIs have a long-standing commitment to undergraduate education, routinely involving undergraduates in their research and exposing them to parallel software and hardware. The PIs will continue to involve undergraduate and graduate students in their research groups. This project is compelling to undergraduates because it involves the interaction of two different system layers.</AbstractNarration>
    <MinAmdLetterDate>08/14/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>06/01/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0834738</AwardID>
    <Investigator>
      <FirstName>Josep</FirstName>
      <LastName>Torrellas</LastName>
      <EmailAddress>torrellas@cs.uiuc.edu</EmailAddress>
      <StartDate>08/14/2008</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Samuel</FirstName>
      <LastName>King</LastName>
      <EmailAddress>kingst@uiuc.edu</EmailAddress>
      <StartDate>08/14/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7902</Code>
      <Text>PSCE</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9216</Code>
      <Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
