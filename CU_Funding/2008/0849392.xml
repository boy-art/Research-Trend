<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SGER: PQL: A Path Query Language</AwardTitle>
    <AwardEffectiveDate>09/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2009</AwardExpirationDate>
    <AwardAmount>130000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05020000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Div Of Information &amp; Intelligent Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Frank Olken</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This proposal extends current research in creating a query language&lt;br/&gt;for provenance to a broad range of application domains by designing,&lt;br/&gt;developing, and evaluating a general-purpose query language for&lt;br/&gt;graph-oriented data.&lt;br/&gt;&lt;br/&gt;PQL, the path query language, was designed to address the challenges&lt;br/&gt;encountered in expressing queries on provenance or lineage data,&lt;br/&gt;but it was conceived to be the foundation for a general purpose&lt;br/&gt;data model and query language for manipulating any type of&lt;br/&gt;graph-oriented data. Graph-oriented data arises in many disciplines&lt;br/&gt;including computer networking, information retrieval, biology, web&lt;br/&gt;search, social networking, genealogy, etc. A characteristic that&lt;br/&gt;unites all these domains is that need for expressing queries on&lt;br/&gt;paths through a graph. Most existing solutions today have either&lt;br/&gt;a weak or non-existent notion of paths as first-class entities that&lt;br/&gt;can be named, compared, manipulated and constructed. PQL addresses&lt;br/&gt;this problem.&lt;br/&gt;&lt;br/&gt;Derived from the semi-structured database language, Lorel, PQL&lt;br/&gt;operates on semi-structured data, which can be viewed as a collection&lt;br/&gt;of objects linked together. In PQL, these links are unidirectional,&lt;br/&gt;although we support both forward and backward queries across these&lt;br/&gt;links. Queries are expressed by selecting and filtering one or&lt;br/&gt;more paths in the graph, where paths can be described by regular&lt;br/&gt;expressions. Thus, in the provenance domain, one can talk about,&lt;br/&gt;''all paths in the graph between invocations of a compiler and the&lt;br/&gt;resulting executables.'' In biology, one might pose a query about,&lt;br/&gt;''all paths from a particular combination of gene expressions to&lt;br/&gt;resulting insulin production.''&lt;br/&gt;&lt;br/&gt;The work described in this proposal extends PQL to include update&lt;br/&gt;syntax and semantics and the ability to produce query results that&lt;br/&gt;are graphs constructed from components of the original. The result&lt;br/&gt;of this work will be captured in both a machine-checkable formal&lt;br/&gt;specification of the language and an open source PQL implementation,&lt;br/&gt;complete with a (replaceable) back-end implementation.&lt;br/&gt;&lt;br/&gt;Further information on the project can be found at the project web page:&lt;br/&gt;http://www.eecs.harvard.edu/~syrah/pass/</AbstractNarration>
    <MinAmdLetterDate>08/29/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>08/29/2008</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0849392</AwardID>
    <Investigator>
      <FirstName>Margo</FirstName>
      <LastName>Seltzer</LastName>
      <EmailAddress>margo@eecs.harvard.edu</EmailAddress>
      <StartDate>08/29/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Harvard University</Name>
      <CityName>Cambridge</CityName>
      <ZipCode>021385366</ZipCode>
      <PhoneNumber>6174955501</PhoneNumber>
      <StreetAddress>1033 MASSACHUSETTS AVE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
  </Award>
</rootTag>
