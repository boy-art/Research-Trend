<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Collaborative Research: Next Generation Compilers for Emerging Multicore Systems</AwardTitle>
    <AwardEffectiveDate>09/15/2007</AwardEffectiveDate>
    <AwardExpirationDate>01/31/2012</AwardExpirationDate>
    <AwardAmount>300000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Almadena Y. Chtchelkanova</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The emergence of multicores as the standard machine design has created one of the most important challenges to the software industry in the history of computing. To take advantage of the additional computational power of each new generation of machines, programs must be able to profit from the most important characteristic of multicores: the presence of multiple processors. In other words, programs must be able to execute in parallel. Furthermore, for efficient execution, this parallelism must take a form that is consistent with the internal organization of the multicore machine where the program is to execute. If these programs were to be manually designed, the need to take into account machine characteristics would increase the cost of program development significantly. Also, since newer multicore designs are likely to include novel architectural features, the process of porting programs from one generation to the next will also involve significant costs. In other words, if nothing is done, the significant increases in the cost of software will be necessary for widespread acceptance of multicores. &lt;br/&gt;Our objective in this project is to develop techniques for automating the process of generating efficient parallel programs. To this end, we will extend Pivot, a prototype C++ compiler, under development at Texas A&amp;M, with techniques capable of automatically detecting the parallelism implicit in most conventional C++ programs and mapping it onto a wide range of multicore systems. That is, we will extend Pivot with automatic parallelization techniques. We will build on static and hybrid (static and dynamic) analysis techniques developed at Illinois and Texas A&amp;M for numerical computations and extend them to handle the irregular data structures that are often used in C++ programs.</AbstractNarration>
    <MinAmdLetterDate>09/12/2007</MinAmdLetterDate>
    <MaxAmdLetterDate>07/31/2008</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0702260</AwardID>
    <Investigator>
      <FirstName>David</FirstName>
      <LastName>Padua</LastName>
      <EmailAddress>padua@uiuc.edu</EmailAddress>
      <StartDate>09/12/2007</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Maria</FirstName>
      <LastName>Garzaran</LastName>
      <EmailAddress>garzaran@cs.uiuc.edu</EmailAddress>
      <StartDate>09/12/2007</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7352</Code>
      <Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
