<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Systematic Software Testing Using Test Abstractions</AwardTitle>
    <AwardEffectiveDate>06/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>05/31/2014</AwardExpirationDate>
    <AwardAmount>406000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>CCF-0746856&lt;br/&gt;CAREER: Systematic Software Testing Using Test Abstractions&lt;br/&gt;Darko Marinov&lt;br/&gt;&lt;br/&gt;Software testing is important for increasing software reliability, but expensive and can account for more than half of the software development cost. Automated testing can significantly help programmers to develop and maintain reliable software. However, test automation is mainly limited to test execution, while test generation remains manual and mostly ad hoc, which not only makes it hard to develop tests initially but also to maintain and reuse tests.&lt;br/&gt;&lt;br/&gt;To reduce the cost of developing, maintaining, and reusing tests, this project investigates a novel approach to automated testing based on test abstractions. Conceptually, each test abstraction provides a high-level description of a desired test suite: programmers do not need to manually write large suites of individual tests but instead write only test abstractions from which tools automatically generate individual tests. This project investigates five aspects of test abstractions: (1) What languages to use for writing test abstractions? (2) Which tests to generate from test abstractions? (3) How to automatically generate tests from test abstractions? (4) How to determine whether the code under test passed or failed? (5) How to determine which failing tests are caused by the same code error?</AbstractNarration>
    <MinAmdLetterDate>02/08/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>06/01/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0746856</AwardID>
    <Investigator>
      <FirstName>Darko</FirstName>
      <LastName>Marinov</LastName>
      <EmailAddress>marinov@illinois.edu</EmailAddress>
      <StartDate>02/08/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7352</Code>
      <Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9251</Code>
      <Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
