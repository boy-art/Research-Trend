<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR-EHS Predictable Adaptive Residual Monitoring for Real-time Embedded Systems</AwardTitle>
    <AwardEffectiveDate>09/01/2007</AwardEffectiveDate>
    <AwardExpirationDate>02/29/2012</AwardExpirationDate>
    <AwardAmount>515950</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>D. Helen Gill</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The use of software to control devices deployed, for example, in medical, transportation, and power systems demands correct software operation. Current approaches to assuring the correct operation of embedded software face significant challenges in scaling to the next generation of embedded applications. A promising strategy for meeting these challenges is to deploy ""monitoring"" software that will ""watch"" and ""warn"" of problematic situations that the operational software should adapt to avoid. Unfortunately, current approaches for software monitoring result in excessive overhead and are not sensitive to the fundamental timeliness requirements in embedded software.&lt;br/&gt;&lt;br/&gt;This project is investigating technologies for the timely and efficient monitoring of software in embedded systems. Specifically, the project explores the synergistic combination of three approaches: (1) exploiting the results of static analysis to calculate a minimal ""residual"" analysis problem to be monitored at run-time, (2) ""adapting"" the degree of observation of the software dynamically during execution while preserving the fidelity of monitoring, and (3) using scheduling techniques to ensure that monitors detect patterns of software behavior with a ""predictable"" worst-case delay. Together these techniques are being combined into a single predictable, adaptable, residual (PAR) monitoring infrastructure within which a variety of implementation strategies will be realized. Evaluation of the cost-effectiveness of these techniques will be carried out in the context of RTSJ and sensor-network infrastructures and applications. These techniques and the PAR infrastructure are the basis for projects in both real-time systems and software validation courses to train the next generation of embedded software engineers.</AbstractNarration>
    <MinAmdLetterDate>08/06/2007</MinAmdLetterDate>
    <MaxAmdLetterDate>02/11/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0720654</AwardID>
    <Investigator>
      <FirstName>Matthew</FirstName>
      <LastName>Dwyer</LastName>
      <EmailAddress>dwyer@cse.unl.edu</EmailAddress>
      <StartDate>08/06/2007</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Sebastian</FirstName>
      <LastName>Elbaum</LastName>
      <EmailAddress>elbaum@cse.unl.edu</EmailAddress>
      <StartDate>08/06/2007</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Stephen</FirstName>
      <LastName>Goddard</LastName>
      <EmailAddress>goddard@cse.unl.edu</EmailAddress>
      <StartDate>08/06/2007</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Nebraska-Lincoln</Name>
      <CityName>Lincoln</CityName>
      <ZipCode>685031435</ZipCode>
      <PhoneNumber>4024723171</PhoneNumber>
      <StreetAddress>151 Prem S. Paul Research Center</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Nebraska</StateName>
      <StateCode>NE</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9178</Code>
      <Text>UNDERGRADUATE EDUCATION</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9251</Code>
      <Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
