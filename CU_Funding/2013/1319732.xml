<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>AF: Small: Efficient Algorithms for Rectangular Layouts and Cartograms</AwardTitle>
    <AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2017</AwardExpirationDate>
    <AwardAmount>349986</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Jack Snoeyink</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>A "rectangular layout" L is a partition of a rectangle into a set of disjoint smaller rectangles by vertical and horizontal line segments. L is said to "represent a graph G" if the smaller rectangles correspond to the vertices of G one-to-one, and two vertices are adjacent in G if and only if their corresponding rectangles share a common boundary in L. An "area assignment function" of L is a specification of the area of each rectangle in L. L is called a "rectangular cartogram" if the areas of the rectangles in L equal to their specified areas. L is called "area-universal" if it can realize any area-assignment function.&lt;br/&gt;&lt;br/&gt;Rectangular layouts have applications in VLSI, architectural design, computational geometry, geographic information system, and other practical fields. Extensive research works have been done in this area. But many interesting problems remain open. The PI will study several open algorithmic problems related to these structures:&lt;br/&gt;(1) How to decide if a given graph G has an area-universal layout?&lt;br/&gt;(2) Given an area-universal layout L and an area-assignment function a, how to compute the coordinates of the cartogram for a by using a combinatorial algorithm?&lt;br/&gt;(3) Not all plane graphs have rectangular layouts. If G does not have one, how to find a representation of G by using recti-linear polygons of more complex shapes?&lt;br/&gt;(4) Another useful subclass of rectangular layouts are "slicing floorplans". Many optimization problems are NP-complete for general floorplans, but polynomial time solvable for slicing floorplans. How to decide if a given graph G has slicing floorplans or not?&lt;br/&gt;&lt;br/&gt;The PI aims to develop efficient algorithms for solving these problems. This research will make both theoretical and practical contributions. On the practical side, many problems discussed above are motivated by real-world applications. On the theoretical side, the algorithmic tools developed in this project include several important graph-theoretic constructions, and are related to some open questions in graph theory and combinatorics. While the four problems outlined above are interesting and important, they are by no means the only problems in this field. The techniques developed in this research are likely useful in solving related problems. Two graduate students will work on this project under PI's supervision. The topics covered in this research will be taught in an advanced algorithm course.</AbstractNarration>
    <MinAmdLetterDate>06/25/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>06/25/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1319732</AwardID>
    <Investigator>
      <FirstName>Xin</FirstName>
      <LastName>He</LastName>
      <EmailAddress>xinhe@buffalo.edu</EmailAddress>
      <StartDate>06/25/2013</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>SUNY at Buffalo</Name>
      <CityName>Amherst</CityName>
      <ZipCode>142282567</ZipCode>
      <PhoneNumber>7166452634</PhoneNumber>
      <StreetAddress>520 Lee Entrance</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7929</Code>
      <Text>COMPUTATIONAL GEOMETRY</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7929</Code>
      <Text>COMPUTATIONAL GEOMETRY</Text>
    </ProgramReference>
  </Award>
</rootTag>
