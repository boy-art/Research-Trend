<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Aiding Comprehension of Complex Software Dynamics to Support High-Quality Software Development</AwardTitle>
    <AwardEffectiveDate>07/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2019</AwardExpirationDate>
    <AwardAmount>319111</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This research is aimed at helping software developers understand, diagnose, and fix bugs in software. A large class of bugs that are caused by logical inconsistencies in the software code, i.e., incongruences between the developers' expectation of how the program should behave and the way it actually does. Such common logical inconsistencies typically require developer attention and comprehension, and are not amenable to algorithmic location and repair. As such, the goal of this research is to assist software developers performing software maintenance and debugging tasks by facilitating their comprehension of the software and its behavior, with the ultimate goal of equipping them to produce higher quality software, more economically.&lt;br/&gt;&lt;br/&gt;Viewing the challenges of software maintenance and debugging as challenges of human comprehension, the research aims to help understand where bugs reside in the codebase, why the code behaves incorrectly, who are the developers best equipped to understand and fix problems, and when were the changes made that introduced bugs. These questions are addressed using a combination of (1) automated recommendation systems to use software artifacts and analyses to provide automated assistance to engineers; (2) discovery and exploration tools to enable engineers to develop deeper comprehension of the automated recommendations; novel experimental protocols and evaluations to determine sources of comprehension challenges. The research combines ideas from software analysis and human-computer interaction. Better understanding of software faults and how to repair them will lead to higher quality software at reduced costs.</AbstractNarration>
    <MinAmdLetterDate>01/22/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>07/25/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1350837</AwardID>
    <Investigator>
      <FirstName>James</FirstName>
      <LastName>Jones</LastName>
      <EmailAddress>jajones@ics.uci.edu</EmailAddress>
      <StartDate>01/22/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-Irvine</Name>
      <CityName>Irvine</CityName>
      <ZipCode>926173213</ZipCode>
      <PhoneNumber>9498247295</PhoneNumber>
      <StreetAddress>141 Innovation Drive, Ste 250</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
