<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>EAGER: Efficient Monitor-Based Synchronization Mechanisms for Concurrent Programs</AwardTitle>
    <AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2016</AwardExpirationDate>
    <AwardAmount>165000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>M. Mimi McClure</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Programming multicore processors is a challenging task due to bugs resulting&lt;br/&gt;from concurrency and synchronization. A fundamental reason for the difficulty&lt;br/&gt;is that current programming mechanisms require programmers to manually&lt;br/&gt;coordinate synchronization between threads running on these systems.&lt;br/&gt;Consequently, concurrent systems are prone to bugs due to faulty&lt;br/&gt;synchronization problems such as missing, wrong, or lost notifications for&lt;br/&gt;threads. Moreover, these bugs are hard to find during testing because they may&lt;br/&gt;appear only under a rare schedule of events. Current programming mechanisms&lt;br/&gt;also limit the amount of concurrency in threads to ensure that a shared&lt;br/&gt;variable is not updated by multiple threads. As a result, many concurrent&lt;br/&gt;systems slow down due to sequential bottleneck of accessing shared variables.&lt;br/&gt;This project is expected to fundamentally change the way synchronization&lt;br/&gt;mechanisms (such as monitors) are written and implemented. It will lead to&lt;br/&gt;better understanding of how conditions in a multithreaded program can be&lt;br/&gt;evaluated efficiently. As a result, the concurrent programming systems will&lt;br/&gt;become more reliable and faster. The impact on society is expected to be large&lt;br/&gt;because all new systems are based on concurrent programs.&lt;br/&gt;&lt;br/&gt;The project is developing new synchronization mechanisms with two fundamental&lt;br/&gt;goals. The first goal is to make synchronization as simple and intuitive as&lt;br/&gt;possible for programmers. Current (monitor based) synchronization&lt;br/&gt;mechanisms require programmers to explicitly signal threads that may be waiting&lt;br/&gt;on certain conditions. In the synchronization mechanism developed in this&lt;br/&gt;project, there is no notion of condition variables and it is the responsibility&lt;br/&gt;of the runtime system to automatically signal appropriate threads. Analogous&lt;br/&gt;to automatic garbage collection in Java, the project is designing efficient&lt;br/&gt;algorithms and techniques for automatic signaling. The project is&lt;br/&gt;investigating techniques to deal with fairness and exploitation of runtime&lt;br/&gt;information such as idle cores for effective and efficient automatic signaling.&lt;br/&gt;The second goal is to increase the concurrency in implementation of monitor&lt;br/&gt;without requiring programmers to do any additional work and without violating&lt;br/&gt;the guarantee provided by the monitor that execution of its methods is&lt;br/&gt;equivalent to one in which there is at most one thread in the monitor at any&lt;br/&gt;time. &lt;br/&gt;&lt;br/&gt;There is also a strong educational component for this project. Synchronization is a fundamental topic&lt;br/&gt;in computer science education and is taught in all operating system courses. By&lt;br/&gt;eliminating manual signaling from these courses, students would get more time&lt;br/&gt;to focus on higher level concurrent programming concerns.</AbstractNarration>
    <MinAmdLetterDate>09/05/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>09/05/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1346245</AwardID>
    <Investigator>
      <FirstName>Vijay</FirstName>
      <LastName>Garg</LastName>
      <EmailAddress>garg@ece.utexas.edu</EmailAddress>
      <StartDate>09/05/2013</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Texas at Austin</Name>
      <CityName>Austin</CityName>
      <ZipCode>787121532</ZipCode>
      <PhoneNumber>5124716424</PhoneNumber>
      <StreetAddress>101 E. 27th Street, Suite 5.300</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Texas</StateName>
      <StateCode>TX</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7916</Code>
      <Text>EAGER</Text>
    </ProgramReference>
  </Award>
</rootTag>
