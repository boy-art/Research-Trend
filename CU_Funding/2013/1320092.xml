<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Foundations for User Interface Programming</AwardTitle>
    <AwardEffectiveDate>09/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2017</AwardExpirationDate>
    <AwardAmount>399994</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>More than one-third of all program code exists to implement user interfaces and this code contains an even larger portion of all defects. This is no surprise; user interface code is seldom reusable and current event-handling-based approaches to user interface programming require programmers to manage a large number of details; too many to consistently produce correct and rich user interface behaviors. The impact is experienced by all computer users: user interfaces get stuck, behave illogically, lose information, lack crucial or useful functionality, or are simply confusing. The result is user frustration and wasted effort, a very significant cost when aggregated over all users, and significant even to one user when aggregated over all of his or her computer use. This project seeks advances in user interface programming, studying a declarative approach where many behaviors of user interfaces can be expressed as reusable algorithms encoded in software libraries. This drastically reduces the details that an application programmer needs to be concerned with; application-specific "event handling" code is not necessary at all. The goal is to significantly reduce the cost of producing high quality user interfaces, and, indirectly through better user interfaces, to make our interactions with computers less frustrating and more productive.&lt;br/&gt;&lt;br/&gt;The proposed declarative programming approach is based on multi-way data-flow constraint systems, which are applied to model the data directly manipulated by user interfaces and the dependencies within that data. The project seeks to show that once an application programmer specifies such a constraint system and connects it to the visual elements of a user interface, a large class of the interface's behavior can be derived from reusable algorithms parametrized over the constraint system. Examples of such behaviors include updating values of elements based on user interaction on other user interface elements, enabling and disabling user interface elements, keeping the user interface maximally responsive by concurrently executing computations triggered by users' interactions, managing changes in the structure of the user interface, and correctly orchestrating all of the above.</AbstractNarration>
    <MinAmdLetterDate>08/07/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>10/04/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1320092</AwardID>
    <Investigator>
      <FirstName>Jaakko</FirstName>
      <LastName>Jarvi</LastName>
      <EmailAddress>jarvi@cse.tamu.edu</EmailAddress>
      <StartDate>10/04/2016</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Jaakko</FirstName>
      <LastName>Jarvi</LastName>
      <EmailAddress>jarvi@cse.tamu.edu</EmailAddress>
      <StartDate>08/07/2013</StartDate>
      <EndDate>10/04/2016</EndDate>
      <RoleCode>Former Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Dilma</FirstName>
      <LastName>Da Silva</LastName>
      <EmailAddress>dilma@tamu.edu</EmailAddress>
      <StartDate>09/30/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Texas A&amp;M Engineering Experiment Station</Name>
      <CityName>College Station</CityName>
      <ZipCode>778454645</ZipCode>
      <PhoneNumber>9798477635</PhoneNumber>
      <StreetAddress>TEES State Headquarters Bldg.</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Texas</StateName>
      <StateCode>TX</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
