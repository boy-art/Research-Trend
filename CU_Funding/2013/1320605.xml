<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Towards Obfuscation-Resilient Software Plagiarism Detection</AwardTitle>
    <AwardEffectiveDate>08/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2017</AwardExpirationDate>
    <AwardAmount>500000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Software plagiarism is an act of reusing someone else's code, in whole or in part, into one own program in a way violating the terms of original license. Along with the rapid developing software industry and the burst of open source projects, software plagiarism has become a very serious threat to Intellectual Property Protection and the "healthiness" of the open-source-embracing software industry. Meanwhile, software plagiarism (and what is called app repackaging) has become an even more common phenomenon in the mobile app markets for monetary profit or propagation of malware by inserting malicious payloads into the original apps. To address this threat, computer-aided, automated plagiarism detection tools should play a major role. However, existing plagiarism detection schemes are not resilient to code obfuscation, and often they can be defeated by (in most cases rather simple) code-obfuscation-based counter-detection tools which are freely available.&lt;br/&gt;&lt;br/&gt;In this project, the software plagiarism detection problem is studied in a systematic way. The proposed plagiarism detection methods for PC applications leverage program logic and longest semantically-equivalent-basic-block subsequences. They are capable of detecting partial program plagiarism and also provide formal guarantee on obfuscation resilience. The proposed method for mobile apps exploits user interface for plagiarism detection, and this unique design angle empowers it to defeat various code obfuscation techniques. Our proposed research will significantly deter the intention or practice of software plagiarism. It will not only serve as a useful tool in collecting strong plagiarism evidences for lawsuits related to intellectual property, but also promote a more healthy and trustworthy sharing environment for the open source community and for the mobile app markets. Broader impact will also result from the education and dissemination initiatives.</AbstractNarration>
    <MinAmdLetterDate>06/24/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>06/24/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1320605</AwardID>
    <Investigator>
      <FirstName>Peng</FirstName>
      <LastName>Liu</LastName>
      <EmailAddress>pliu@ist.psu.edu</EmailAddress>
      <StartDate>06/24/2013</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Sencun</FirstName>
      <LastName>Zhu</LastName>
      <EmailAddress>szhu@cse.psu.edu</EmailAddress>
      <StartDate>06/24/2013</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Dinghao</FirstName>
      <LastName>Wu</LastName>
      <EmailAddress>dwu@ist.psu.edu</EmailAddress>
      <StartDate>06/24/2013</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Pennsylvania State Univ University Park</Name>
      <CityName>UNIVERSITY PARK</CityName>
      <ZipCode>168027000</ZipCode>
      <PhoneNumber>8148651372</PhoneNumber>
      <StreetAddress>110 Technology Center Building</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Pennsylvania</StateName>
      <StateCode>PA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
