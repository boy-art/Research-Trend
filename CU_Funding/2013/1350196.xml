<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Approximation and Hardness from Strong Relaxations</AwardTitle>
    <AwardEffectiveDate>02/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>01/31/2019</AwardExpirationDate>
    <AwardAmount>366166</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Jack Snoeyink</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Discrete optimization lies at the core of computer science and its applications. Except for a few special cases, exact optimization is computationally intractable. Approximation algorithms seek to resolve this issue by providing computational efficiency and at the same time provable guarantees on the quality of solutions. The current project addresses fundamental open questions about approximation algorithms. The project will use strong relaxations, especially the sum-of-squares method, as a lens to shed light on these questions.&lt;br/&gt;&lt;br/&gt;The Unique Games Conjecture has fueled many recent advances in our understanding of approximation algorithms. A proof of this conjecture would show that for a large classes of problems the approximation guarantees of a concrete algorithm are best possible. On the other hand, a refutation of the conjecture would likely lead to major improvements of approximation algorithms for a wide range of problems. Recent works of the PI and coauthors identified a candidate algorithm to refute the Unique Games Conjecture. This algorithm is able to solve previously proposed constructions of hard instances for problems that the conjecture predicts to be NP-hard. An integral part of the research project is to resolve whether this algorithm indeed refutes the conjecture.&lt;br/&gt;&lt;br/&gt;The candidate algorithm comes from a meta-algorithm, called sum-of-squares method. The current project will also study the approximation guarantees of this method beyond the Unique Games Conjecture, and investigate the thesis that for a large class of problems, the sum-of-squares method is an optimal meta-algorithm in terms of approximation guarantee and time complexity.&lt;br/&gt;&lt;br/&gt;A broad range of academic disciplines apply optimization techniques and computational efficiency is an important factor in these applications. In practice, meta-algorithms are often a popular choice, e.g., belief propagation, MCMC methods and SAT solvers, but lack provable approximation guarantees. The sum-of-squares method has the potential to achieve the same versatility as other meta-algorithms but with the additional benefit of provable guarantees.</AbstractNarration>
    <MinAmdLetterDate>01/22/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>09/22/2015</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1350196</AwardID>
    <Investigator>
      <FirstName>David</FirstName>
      <LastName>Steurer</LastName>
      <EmailAddress>dsteurer@cs.cornell.edu</EmailAddress>
      <StartDate>01/22/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Cornell University</Name>
      <CityName>Ithaca</CityName>
      <ZipCode>148502820</ZipCode>
      <PhoneNumber>6072555014</PhoneNumber>
      <StreetAddress>373 Pine Tree Road</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>1640</Code>
      <Text>INFORMATION TECHNOLOGY RESEARC</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7796</Code>
      <Text>ALGORITHMIC FOUNDATIONS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7927</Code>
      <Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
    </ProgramReference>
  </Award>
</rootTag>
