<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Principles and Practice of Distributed Updates</AwardTitle>
    <AwardEffectiveDate>02/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>01/31/2018</AwardExpirationDate>
    <AwardAmount>532005</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Many systems must be periodically updated to add features, fix bugs, patch security vulnerabilities, and eliminate performance bottlenecks. In some systems, updates can be applied by simply halting the program, updating the code and data, and restarting the new version, but in critical systems even brief interruptions for maintenance are unacceptable. Although the research community has developed techniques for updating programs on the fly, existing frameworks only handle a single machine. To update the software running on a distributed system, programmers typically use ad hoc techniques that are difficult to reason about and prone to error.&lt;br/&gt;&lt;br/&gt;The goal of this project is to develop foundational principles and practical techniques for managing distributed updates. A central theme is the use of bidirectional transformations to bridge the gap between different versions of a program, thereby allowing multiple versions to interoperate seamlessly. Specific contributions include developing (i) formal foundations for distributed updates, (ii) programming abstractions for constructing and deploying updates, (iii) verification tools for checking update correctness properties automatically, and (iv) an evaluation of these abstractions and tools on practical examples. The project will have broad impact by (i) discovering techniques for increasing the reliability of distributed systems during updates, (ii) building reusable software infrastructure for managing updates, and (iii) improving K-12 education and increasing the participation of underrepresented minorities in science through a high school outreach program.</AbstractNarration>
    <MinAmdLetterDate>01/23/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>02/07/2017</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1253165</AwardID>
    <Investigator>
      <FirstName>John</FirstName>
      <LastName>Foster</LastName>
      <EmailAddress>jnfoster@cs.cornell.edu</EmailAddress>
      <StartDate>01/23/2013</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Cornell University</Name>
      <CityName>Ithaca</CityName>
      <ZipCode>148502820</ZipCode>
      <PhoneNumber>6072555014</PhoneNumber>
      <StreetAddress>373 Pine Tree Road</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramReference>
  </Award>
</rootTag>
