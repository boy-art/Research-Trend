<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Formal Methods for Approximate Computing</AwardTitle>
    <AwardEffectiveDate>05/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>04/30/2021</AwardExpirationDate>
    <AwardAmount>66846</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Nowadays, power and energy constraints are the main driving force of&lt;br/&gt;improvements in computing abilities, and approximate computing has emerged as a&lt;br/&gt;promising technique for enabling these improvements. The main idea behind&lt;br/&gt;approximate computing is to trade the accuracy of computations in order to&lt;br/&gt;enable novel optimizations that improve performance or energy efficiency. This&lt;br/&gt;leverages the fact that many applications are resilient to errors to some extent, &lt;br/&gt;and hence do not require absolute correctness of computations. Clearly, developing &lt;br/&gt;software for future approximate computing platforms will not be an easy task: a &lt;br/&gt;developer must introduce as many approximations as possible, while at the same time&lt;br/&gt;ensuring that correctness and the results quality requirements of an&lt;br/&gt;application are met.&lt;br/&gt;&lt;br/&gt;This project explores automated techniques and tools to assist developers by&lt;br/&gt;allowing them to explore approximate computing trade-offs. The techniques are&lt;br/&gt;based around a rigorous, automated, and precise analysis of program&lt;br/&gt;approximations. The main novelty is to leverage recent advances in automated&lt;br/&gt;software verification in the context of approximate computing. The project will&lt;br/&gt;develop an open platform for the rigorous analysis of approximate programs. &lt;br/&gt;By focusing on improving developer's experience when writing code for future &lt;br/&gt;approximate computing platforms, this work has the potential to achieve significant &lt;br/&gt;impact across a wide spectrum of industries and applications.</AbstractNarration>
    <MinAmdLetterDate>04/29/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>04/29/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1552975</AwardID>
    <Investigator>
      <FirstName>Zvonimir</FirstName>
      <LastName>Rakamaric</LastName>
      <EmailAddress>zvonimir@cs.utah.edu</EmailAddress>
      <StartDate>04/29/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Utah</Name>
      <CityName>SALT LAKE CITY</CityName>
      <ZipCode>841128930</ZipCode>
      <PhoneNumber>8015816903</PhoneNumber>
      <StreetAddress>75 S 2000 E</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Utah</StateName>
      <StateCode>UT</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8206</Code>
      <Text>Formal Methods and Verification</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
  </Award>
</rootTag>
