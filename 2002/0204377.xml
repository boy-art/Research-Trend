<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Animating Viscoplastic Materials with Dynamically Changing Meshes</AwardTitle>
    <AwardEffectiveDate>10/01/2002</AwardEffectiveDate>
    <AwardExpirationDate>09/30/2005</AwardExpirationDate>
    <AwardAmount>510001</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Lawrence Rosenblum</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>ABSTRACT&lt;br/&gt;0204377&lt;br/&gt;Shewchuk, Jonathan&lt;br/&gt;U of Calif Berkeley&lt;br/&gt;&lt;br/&gt;We intend to develop fast, versatile, and visually accurate computational models for viscoplas-tic&lt;br/&gt;materials ranging from stiff, non-compliant solids to low viscosity fluids. We are designing&lt;br/&gt;these models for applications where visual realism, computation speed, and robustness are the&lt;br/&gt;predominant requirements (with numerical accuracy being subordinate). Examples of such&lt;br/&gt;applications include real-time interactive training simulations (e.g. surgical simulation or haz-ardous&lt;br/&gt;duty simulations) and off-line generation of visualizations (e.g. cinematic effects or&lt;br/&gt;accident reenactment).&lt;br/&gt;To achieve this goal, we must develop fast, guaranteed-quality methods for generating and in-crementally&lt;br/&gt;updating unstructured (irregular) triangular and tetrahedral meshes. Dynamically changing meshes are a necessity to model the complete range of viscoplastic materials, espe-cially where large deformations and mixing may occur. Thus, the actions of the numerical simulation and the remeshing algorithms must be tightly integrated, especially if we wish to minimize errors due to interpolation and reinterpolation. To ensure that our dynamic meshing algorithms and implementations are useful for other applications as well, we will develop a general methodology for communicating information between the numerical simulation and&lt;br/&gt;the mesh generator.</AbstractNarration>
    <MinAmdLetterDate>06/28/2002</MinAmdLetterDate>
    <MaxAmdLetterDate>02/13/2004</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0204377</AwardID>
    <Investigator>
      <FirstName>Jonathan</FirstName>
      <LastName>Shewchuk</LastName>
      <EmailAddress>jrs@cs.berkeley.edu</EmailAddress>
      <StartDate>06/28/2002</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>James</FirstName>
      <LastName>O'Brien</LastName>
      <EmailAddress>job@cs.berkeley.edu</EmailAddress>
      <StartDate>06/28/2002</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-Berkeley</Name>
      <CityName>BERKELEY</CityName>
      <ZipCode>947045940</ZipCode>
      <PhoneNumber>5106428109</PhoneNumber>
      <StreetAddress>Sponsored Projects Office</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
  </Award>
</rootTag>
