<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Reducing Frequency via Speculation and Fall-Back Recovery</AwardTitle>
    <AwardEffectiveDate>07/01/2002</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2006</AwardExpirationDate>
    <AwardAmount>300000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>D. Helen Gill</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Mueller, Frank&lt;br/&gt;CCR-0208581&lt;br/&gt;" Reducing Frequency via Speculation and Fall-Back Recovery"&lt;br/&gt;&lt;br/&gt;Conserving power is a key issue in embedded computing. At present, significant power is wasted because embedded system designers lack detailed knowledge of the processing speed needed by applications. Naive worst-case timing analysis exaggerates the required processor frequency, especially as software and hardware complexity increases.&lt;br/&gt;&lt;br/&gt;This work puts forth a two-tier approach to reduce the processor frequency of complex embedded systems. First, tight worst-case timing analysis reduces the perceived upper bound on the number of cycles consumed by tasks. This reduces the maximum frequency, saving power. Second, architecture simulation and processors with dual frequency/voltage modes enable significant additional power savings. Architecture simulation produces an approximate worst-case timing estimate, which does not have to be safe and, consequently, is the basis for a very low speculative frequency. A higher recovery frequency is utilized as a fall-back mode to ensure safe operation bounded by tight worst-case timing analysis, as delivered in the first approach. These two approaches complement each other. They initially reduce the power requirements by a significant amount when compared with the naive approach. Additionally, they reduce power&lt;br/&gt;requirements further by exploiting simulation to accurately</AbstractNarration>
    <MinAmdLetterDate>06/28/2002</MinAmdLetterDate>
    <MaxAmdLetterDate>04/30/2004</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0208581</AwardID>
    <Investigator>
      <FirstName>Frank</FirstName>
      <LastName>Mueller</LastName>
      <EmailAddress>mueller@cs.ncsu.edu</EmailAddress>
      <StartDate>06/28/2002</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Eric</FirstName>
      <LastName>Rotenberg</LastName>
      <EmailAddress>ericro@ncsu.edu</EmailAddress>
      <StartDate>06/28/2002</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>North Carolina State University</Name>
      <CityName>RALEIGH</CityName>
      <ZipCode>276957514</ZipCode>
      <PhoneNumber>9195152444</PhoneNumber>
      <StreetAddress>CAMPUS BOX 7514</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>North Carolina</StateName>
      <StateCode>NC</StateCode>
    </Institution>
    <ProgramElement>
      <Code>2801</Code>
      <Text>EMBEDDED &amp; HYBRID SYSTEMS(EHS)</Text>
    </ProgramElement>
    <ProgramReference>
      <Code/>
      <Text/>
    </ProgramReference>
    <ProgramReference>
      <Code>9216</Code>
      <Text>ADVANCED SOFTWARE TECH &amp; ALGOR</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
