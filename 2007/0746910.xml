<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: System Support for Implicitly Parallel Programming</AwardTitle>
    <AwardEffectiveDate>05/01/2008</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2010</AwardExpirationDate>
    <AwardAmount>159865</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>CCF-0746910&lt;br/&gt;CAREER: System Support for Implicitly Parallel Programming&lt;br/&gt;&lt;br/&gt;Matthew I. Frank&lt;br/&gt;&lt;br/&gt;While multi-core processor designs allow peak performance to track Moore's law, they introduce new challenges for software developers. Explicitly multi-threaded programs generally take longer to develop, test, debug, and verify than sequential programs with equivalent functionality. Implicit parallelization, on the other hand, allows software engineers to develop parallel algorithms and applications in environments that provide sequential semantics, like the C programming language. System tools convert the parallel algorithms into a set of threads partitioned appropriately for a particular parallel machine organization. The resulting parallel programs are easier and faster to develop, debug, and maintain, because the programmer can request a meaningful and well defined program state at any point of execution. Because error checking code, code reuse, and variable scoping interfere with naive parallelization, this work will investigate system tools that perform reactive and speculative transformations to reduce the tension between application robustness and parallelization.</AbstractNarration>
    <MinAmdLetterDate>02/21/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>11/15/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0746910</AwardID>
    <Investigator>
      <FirstName>Matthew</FirstName>
      <LastName>Frank</LastName>
      <EmailAddress>matthew.i.frank@intel.com</EmailAddress>
      <StartDate>02/21/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7352</Code>
      <Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
