<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Multi-stage Programming for Object-Oriented Languages</AwardTitle>
    <AwardEffectiveDate>02/15/2008</AwardEffectiveDate>
    <AwardExpirationDate>11/30/2010</AwardExpirationDate>
    <AwardAmount>173842</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Proposal Number 0747431&lt;br/&gt;TITLE CAREER: Multi-stage Programming for Object-Oriented Languages &lt;br/&gt;&lt;br/&gt;PI Walid Taha, Rice University&lt;br/&gt;&lt;br/&gt;Over the past decade, multi-stage programming (MSP) has emerged as a unifying approach that captures the disciplined essence program generation. Early work on MSP focused on purely functional languages. The goal of this proposal is to put what we know about MSP to work in the context of mainstream languages such as Java and C#. This will be achieved by means of carefully designed, minimal extensions that provide an expressive, statically checked mechanism for effectively eliminating the interpretive overhead.&lt;br/&gt;&lt;br/&gt;The project will design an object-oriented language that provides statically checked support for the writing of program generators. The language, called The Java Program Mint (Mint) will support: &lt;br/&gt;&lt;br/&gt; 1. Staging constructs that are statically checked before expansion/generation,&lt;br/&gt;&lt;br/&gt; 2. Indexed types, to enable further optimizations that are particularly synergistic with staging, and&lt;br/&gt;&lt;br/&gt; 3. Disciplined, statically typed compile-time computation. &lt;br/&gt;&lt;br/&gt;The design of Mint will be evaluated by establishing formal safety and expressivity results, and the implementation will be evaluated by building demonstration applications. The novel features of Mint will have the most impact on applications that use reflection and that constitute domain-specific language (DSL) extensions, such as serializers, JavaBeans customization facilities, and synchronization libraries.</AbstractNarration>
    <MinAmdLetterDate>02/15/2008</MinAmdLetterDate>
    <MaxAmdLetterDate>03/08/2011</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0747431</AwardID>
    <Investigator>
      <FirstName>Walid</FirstName>
      <LastName>Taha</LastName>
      <EmailAddress>wtaha@uh.edu</EmailAddress>
      <StartDate>02/15/2008</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>William Marsh Rice University</Name>
      <CityName>Houston</CityName>
      <ZipCode>770051827</ZipCode>
      <PhoneNumber>7133484820</PhoneNumber>
      <StreetAddress>6100 MAIN ST</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Texas</StateName>
      <StateCode>TX</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7352</Code>
      <Text>COMPUTING PROCESSES &amp; ARTIFACT</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7299</Code>
      <Text>Catalyzing New Intl Collab</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>1187</Code>
      <Text>PECASE- eligible</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>5944</Code>
      <Text>EGYPT (COOP SCIENCE)</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>5976</Code>
      <Text>AFRICA, NEAR EAST, &amp; SO ASIA</Text>
    </ProgramReference>
  </Award>
</rootTag>
