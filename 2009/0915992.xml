<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Meta Analysis Directed Execution</AwardTitle>
    <AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2015</AwardExpirationDate>
    <AwardAmount>116000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>M. Mimi McClure</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This project aims to modify the representation of binary executable files by retaining information generated during various program transformations using an XML notation. If retrievable, the information lost during transformation processes could potentially improve the hardware/runtime system. &lt;br/&gt;&lt;br/&gt;While high level programming languages support software development, computer architecture is implemented more efficiently around low level assembly/machine programming language. This gap between high level and machine level programming languages is bridged by translations performed by a compiler. A compiler performs significant analysis and translation on the high level program code program in order to generate optimized low level code. However, the original program's structural information is lost by the time the program has been translated into a low level representation. Consequently, an existing processor's architectures cannot benefit from such structural information.&lt;br/&gt;&lt;br/&gt;Many dynamic optimizations performed in a processor, such as branch and value prediction, and many dynamic compiler optimizations, such as dynamic loop unrolling, can be expressed in a semantically rich binary file format. This project uses an XML based binary file format to express program structure. The program metadata is expressed as XML namespace tags. A processor, consisting of a meta-engine to interpret the program level structure semantic metadata, transforms the binary program in order to affect the specified dynamic optimizations before handing it over to a classical execution engine. This approach opens up many performance enhancement opportunities, controlled by the program itself. In this seed project, the execution engine is realized through a simulation environment based on Open DOS (Open Source Dynamic Optimization). A proof-of-concept compiler, XMLgcc, generates the metadata tagged binary files. &lt;br/&gt;&lt;br/&gt;This project will result in a transformative view of processor and compiler design. This may spur processor development activity due to "soft"ization of many of the current hard features of an architecture - a corresponding compiler development has significantly lower overhead. The empirical nature of computer architecture and compilers requires a platform on which architecture and compiler variations can be implemented with low cost. Such a platform is an ideal pedagogical tool for exposing such "what if" iterative design process to computer architecture and compiler students. &lt;br/&gt;&lt;br/&gt;The team will also develop instructional modules based on the SeeMe platform for various computer architecture and compiler (dynamic optimization) topics for graduate classes.</AbstractNarration>
    <MinAmdLetterDate>08/27/2009</MinAmdLetterDate>
    <MaxAmdLetterDate>04/22/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0915992</AwardID>
    <Investigator>
      <FirstName>Akhilesh</FirstName>
      <LastName>Tyagi</LastName>
      <EmailAddress>tyagi@iastate.edu</EmailAddress>
      <StartDate>08/27/2009</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Shashi</FirstName>
      <LastName>Gadia</LastName>
      <EmailAddress>gadia@cs.iastate.edu</EmailAddress>
      <StartDate>08/27/2009</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Arun</FirstName>
      <LastName>Somani</LastName>
      <EmailAddress>arun@iastate.edu</EmailAddress>
      <StartDate>08/27/2009</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Iowa State University</Name>
      <CityName>AMES</CityName>
      <ZipCode>500112207</ZipCode>
      <PhoneNumber>5152945225</PhoneNumber>
      <StreetAddress>1138 Pearson</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Iowa</StateName>
      <StateCode>IA</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9178</Code>
      <Text>UNDERGRADUATE EDUCATION</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9251</Code>
      <Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
    </ProgramReference>
  </Award>
</rootTag>
