<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CCF: Medium: Routine Parallelism Enabled by Speculation</AwardTitle>
    <AwardEffectiveDate>07/01/2010</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2015</AwardExpirationDate>
    <AwardAmount>1074469</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Almadena Y. Chtchelkanova</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Parallel programming is notoriously difficult, but essential to the future of computing. Much of the difficulty stems from the need to guarantee, in advance, that parallel computations will not conflict with one another.&lt;br/&gt;Speculation provides an attractive alternative. By monitoring behavior at run time, and retrying computations that conflict, speculation can expose significant amounts of otherwise unexploitable parallelism, while imposing little or no conceptual burden on the programmer.&lt;br/&gt;&lt;br/&gt;The sponsored research aims to make thread- and process-level speculation a fundamental feature of future programming systems, and to employ it in multiple forms and for multiple purposes: to automatically or semi-automatically parallelize sequential applications; to check, dynamically, the independence of explicitly parallel computations; to isolate the execution of semantically atomic functions; to enable optimizations that are not always safe; to parallelize scripting languages with one-thread-at-a-time semantics; and to profile applications in parallel, for feedback-driven optimization.&lt;br/&gt;&lt;br/&gt;The project adopts a tiered approach that isolates the users of simpler programming idioms from the need to understand more complex alternatives.&lt;br/&gt;At the implementation level, it stresses the seamless integration of shared memory and cluster-level distribution, compiler- and binary translator-based software instrumentation, virtual memory, and hardware speculation/transactions where available. Latter phases of the project place major emphasis on profiling tools to identify potentially independent program regions, which can then safely be executed in parallel (via speculation) in future runs.</AbstractNarration>
    <MinAmdLetterDate>05/05/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>06/10/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0963759</AwardID>
    <Investigator>
      <FirstName>Michael</FirstName>
      <LastName>Scott</LastName>
      <EmailAddress>scott@cs.rochester.edu</EmailAddress>
      <StartDate>05/05/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Chen</FirstName>
      <LastName>Ding</LastName>
      <EmailAddress>cding@cs.rochester.edu</EmailAddress>
      <StartDate>05/05/2010</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Rochester</Name>
      <CityName>Rochester</CityName>
      <ZipCode>146270140</ZipCode>
      <PhoneNumber>5852754031</PhoneNumber>
      <StreetAddress>518 HYLAN, RC BOX 270140</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7329</Code>
      <Text>COMPILERS</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7329</Code>
      <Text>COMPILERS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9251</Code>
      <Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
