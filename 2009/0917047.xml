<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Enabling Practical Cross-domain Logic-based Access Control</AwardTitle>
    <AwardEffectiveDate>09/01/2009</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2013</AwardExpirationDate>
    <AwardAmount>443628</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Access control is one of the key aspects of information security. In&lt;br/&gt;the past decade and a half, significant progress has been made in&lt;br/&gt;increasing the assurance and expressiveness offered by access-control&lt;br/&gt;systems, in large part through the use of formal logics to model or&lt;br/&gt;implement these systems.&lt;br/&gt;&lt;br/&gt;A particular challenge in building access-control systems is to allow&lt;br/&gt;delegation between domains that use different authorization logics.&lt;br/&gt;This project focuses on developing a framework for interfacing&lt;br/&gt;different, mutually incompatible authorization logics. The framework&lt;br/&gt;provides an interface for communication between logics via a very&lt;br/&gt;small set of primitives that imposes no fundamental constraints on the&lt;br/&gt;design of the logics that use it. Part of this framework will be an&lt;br/&gt;architecture to facilitate the automated construction of proofs of&lt;br/&gt;access.&lt;br/&gt;&lt;br/&gt;Another barrier to implementing logic-based access-control systems is&lt;br/&gt;that substantial effort is typically required to retrofit existing&lt;br/&gt;systems to support the use of theorem provers, proof checkers, and&lt;br/&gt;associated infrastructure. This project will investigate several&lt;br/&gt;approaches to solving this problem, including automated program&lt;br/&gt;rewriting and automated construction of lightweight theorem provers&lt;br/&gt;and proof checkers.</AbstractNarration>
    <MinAmdLetterDate>09/11/2009</MinAmdLetterDate>
    <MaxAmdLetterDate>07/02/2010</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0917047</AwardID>
    <Investigator>
      <FirstName>Ljudevit</FirstName>
      <LastName>Bauer</LastName>
      <EmailAddress>lbauer@cmu.edu</EmailAddress>
      <StartDate>09/11/2009</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Carnegie-Mellon University</Name>
      <CityName>PITTSBURGH</CityName>
      <ZipCode>152133815</ZipCode>
      <PhoneNumber>4122689527</PhoneNumber>
      <StreetAddress>5000 Forbes Avenue</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Pennsylvania</StateName>
      <StateCode>PA</StateCode>
    </Institution>
  </Award>
</rootTag>
