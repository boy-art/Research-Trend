<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Collaborative Research: Specification Language Foundations for Modular Reasoning Methodologies</AwardTitle>
    <AwardEffectiveDate>08/01/2009</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2012</AwardExpirationDate>
    <AwardAmount>257949</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This project extends the semantical foundations of object-oriented (OO) &lt;br/&gt;languages to cover methodologies for modular reasoning. Modular reasoning &lt;br/&gt;means verifying software components assuming the specification of each &lt;br/&gt;used component. Modularity is important for productivity and scalability, &lt;br/&gt;but is difficult to achieve for OO software. To support modular reasoning, &lt;br/&gt;researchers have proposed several methodologies that restrict programs and &lt;br/&gt;their specifications. The goal of this project is to provide a theoretical &lt;br/&gt;basis that supports practical techniques for justifying and using &lt;br/&gt;methodologies.&lt;br/&gt;&lt;br/&gt;This project provides guidance for the designers of programming and &lt;br/&gt;specification languages, verification logics, and associated tools. The &lt;br/&gt;results will improve the utility and extensibility of verification tools &lt;br/&gt;--- a key goal of the Verified Software grand challenge. Software &lt;br/&gt;developers may benefit from the integration and harmonious interoperation &lt;br/&gt;of best-practice methodologies. This project is potentially &lt;br/&gt;transformative: it aims to enable combinations and customizations of &lt;br/&gt;methodologies by tool users, scalable to real applications.&lt;br/&gt;&lt;br/&gt;Improved OO programming methodologies may greatly improve programming &lt;br/&gt;practice, especially in applications needing high assurance, reliability, &lt;br/&gt;and security. This will benefit society, which increasingly depends on &lt;br/&gt;computing systems built using OO components. Unification of methodologies &lt;br/&gt;and streamlining of tools also facilitates the education of software &lt;br/&gt;developers.</AbstractNarration>
    <MinAmdLetterDate>08/07/2009</MinAmdLetterDate>
    <MaxAmdLetterDate>04/18/2011</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0915611</AwardID>
    <Investigator>
      <FirstName>David</FirstName>
      <LastName>Naumann</LastName>
      <EmailAddress>naumann@cs.stevens.edu</EmailAddress>
      <StartDate>08/07/2009</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Stevens Institute of Technology</Name>
      <CityName>HOBOKEN</CityName>
      <ZipCode>070305991</ZipCode>
      <PhoneNumber>2012168762</PhoneNumber>
      <StreetAddress>CASTLE POINT ON HUDSON</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New Jersey</StateName>
      <StateCode>NJ</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
  </Award>
</rootTag>
