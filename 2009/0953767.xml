<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: GoldMine:Automatic Assertion Generation in System Design Using Data Mining and Static Analysis</AwardTitle>
    <AwardEffectiveDate>03/15/2010</AwardEffectiveDate>
    <AwardExpirationDate>02/28/2015</AwardExpirationDate>
    <AwardAmount>430000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sankar Basu</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>CAREER: GoldMine:Automatic Assertion Generation in System Design Using Data Mining and Static Analysis&lt;br/&gt;Shobha Vasudevan&lt;br/&gt;University of Illinois at Urbana Champaign&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Assertions are summarized statements of design intent that have emerged as the most popular checking artifacts in hardware and software development cycles. In hardware, assertions are used in formal verification, dynamic verification, runtime monitoring, emulation, post-Silicon debug and in-field diagnosis. The generation of assertions today is an intensely manual task. During each system development cycle, many man-months and resources are spent in assertion generation. This work proposes an automatic assertion generation technique and tool, GoldMine, for systems using data mining and static analysis in combination. Data mining infers knowledge by statistical analysis of dynamic behavior of a system. Static analysis reasons with the source code or model of the system without executing it, and analyzes possible behavior. These two technologies can be used synergisti-&lt;br/&gt;cally. Static analysis techniques can be used to infer domain information and guide the data mining. GoldMine will provide simulation data of the target design along with static analysis to a suite of data mining algorithms that will infer ?likely invariants?. The likely invariants will be passed through a formal verifier for filtering the true assertions. Feedback from formal verification will be given to the mining algorithms, as will the designer/user evaluation of the generated assertions. This iterative process will produce high quality assertions automatically. Preliminary results have been obtained on Rigel, a 1000+ processor RTL. &lt;br/&gt;&lt;br/&gt;The marriage between statistical and static analyses proposed here for generating knowledge about a system is a ?meta technique? that can be used in a multitude of forms. A systematic methodology to extract and provide domain knowledge in any structured system, along with statistics based learning techniques can create a very powerful combination. The alliance of static domain analysis and statistical data mining that has been introduced can be used for software systems, embedded systems and other domains where knowledge needs to be inferred.&lt;br/&gt;&lt;br/&gt;This proposal seeks to automate a manual, all-pervasive system process. This aims at saving economic and human resources, thereby increasing the productivity of the community. GoldMine will also be widely disseminated (along with the source code) for research and education purposes, contributing to practical learning of students. The merit in the system design world is that we are proposing to study and systematize the human cognition aspect of design.</AbstractNarration>
    <MinAmdLetterDate>03/16/2010</MinAmdLetterDate>
    <MaxAmdLetterDate>07/01/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0953767</AwardID>
    <Investigator>
      <FirstName>Shobha</FirstName>
      <LastName>Vasudevan</LastName>
      <EmailAddress>shobhav@illinois.edu</EmailAddress>
      <StartDate>03/16/2010</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7945</Code>
      <Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7945</Code>
      <Text>DES AUTO FOR MICRO &amp; NANO SYST</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9218</Code>
      <Text>BASIC RESEARCH &amp; HUMAN RESORCS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>HPCC</Code>
      <Text>HIGH PERFORMANCE COMPUTING &amp; COMM</Text>
    </ProgramReference>
  </Award>
</rootTag>
